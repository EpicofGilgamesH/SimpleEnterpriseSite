@{
    ViewBag.Title = "DepartmentManage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-sm-3" style="border-right:2px solid gray">
            <div class="col-sm-offset-1" style="margin-top:10px;">
                <a class="btn btn-primary" style="@ViewBag.BtnPermissionDic["AddBtnPms"]" id="addParent">增加父节点</a>

                <a class="btn btn-primary" id="addLeaf" style="margin-left:20px; @ViewBag.BtnPermissionDic["AddBtnPms"]">增加子节点</a>
            </div>
            <div class="col-sm-offset-1" style="margin-top:20px;">
                <a class="btn btn-primary" id="edit" style="@ViewBag.BtnPermissionDic["EditBtnPms"]">编辑节点名</a>

                <a class="btn btn-danger" id="remove" style="margin-left:20px; @ViewBag.BtnPermissionDic["DeleteBtnPms"]">删除该节点</a>
            </div>

            <div class="col-sm-offset-1" style="margin-top:20px;">
                <ul id="treeDemo" class="ztree"></ul>
            </div>
        </div>
        <div class="col-sm-9 animated fadeInRight">
            <div class="panel-body" style="padding-bottom:0px;">
                <div class="panel panel-default">
                    <div class="panel-heading">查询条件</div>
                    <div class="panel-body">
                        <div class="form-group" style="margin-top:15px">
                            <div class="col-sm-2">
                                <input id="txt_keyword" type="text" class="form-control" placeholder="部门名称" style="width: 100px;">
                            </div>
                            <div class="col-sm-2">
                                <select id="select_state" class="form-control" style="width: 100px;">
                                    <option value="-1" selected>所有</option>
                                    <option value="1">启用</option>
                                    <option value="0">禁用</option>
                                    <option value="2">锁住</option>
                                </select>
                                @*<input id="txt_nameword" type="text" class="form-control" placeholder="启用" style="width: 100px;">*@
                            </div>
                            <div class="col-sm-4" style="text-align:left;">
                                <button type="button" style="margin-left:50px" id="btn_query" class="btn btn-primary">查询</button>
                                <button type="button" style="margin-left:10px" id="btn_all" class="btn btn-primary">全部</button>
                            </div>
                        </div>
                    </div>
                </div>

                <table id="tb_Roles"></table>

            </div>
        </div>

    </div>
</div>

@*@await Component.InvokeAsync("Permission", new { target = "dept" })*@
<!--权限弹窗-->
<div id="Permission" style="display:none">
    <div class="col-sm-6">
        <div class="col-sm-offset-3" style="margin-top:20px;">
            <ul id="treePermission" class="ztree"></ul>
        </div>
        <div class="col-sm-offset-1">
            <button type="button" id="btnpermission" class="btn btn-group">确定</button>
            <button type="button" id="closepermission" class="btn btn-group">取消</button>
        </div>
    </div>
</div>


<link href="~/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/lib/zTree_v3/css/metroStyle/metroStyle.css" rel="stylesheet" />
<script src="~/lib/zTree_v3/js/jquery.ztree.core.min.js"></script>
<script src="~/lib/zTree_v3/js/jquery.ztree.excheck.min.js"></script>
<script src="~/lib/zTree_v3/js/jquery.ztree.exedit.min.js"></script>
<script src="~/lib/index/ztree_edit.js"></script>
<script>

    $(function () {
        //必填项
        var required = $('input[required]');
        required.each(function (i, n) {
            $(n).parent().prev('label').append('<span style="color:red">*</span>');
        });

        //1.初始化Table
        var table = new TableInit();
        table.Init();

        //2.初始化button
        var button = new ButtonInit();
        button.Init();

        //checkbox event
        $("#switch input").on('switchChange.bootstrapSwitch', function (event, state) {
            alert(state);
        });
    });


    //bootstrat-table
    var TableInit = function () {
        var objTabelInit = new Object();

        objTabelInit.Init = function () {
            $("#tb_Roles").bootstrapTable({
                url: '/Department/PageIndex',         //请求后台的URL（*）
                dataType: "json",
                method: 'get',                      //请求方式（*）
                //toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: false,                     //是否启用排序
                sortOrder: "asc",//排序方式
                queryParamsType: "",
                queryParams: objTabelInit.queryParams,//传递参数（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: false,                //是否启用点击选中行
                height: 700,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                uniqueId: "ID",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //是否显示详细视图
                detailView: false,                   //是否显示父子表

                columns: [{
                    checkbox: true
                }, {
                    field: 'Id',
                    title: 'Id',
                    visible: false
                }, {
                    field: 'Name',
                    title: '部门名称'
                }, {
                    field: 'Manager',
                    title: '部门管理'
                }, {
                    field: 'PName',
                    title: '上级部门'
                }, {
                    field: 'IsParent',
                    title: '是否父部门',
                    formatter: isParentCheckBox,
                    events: swithcCheckBox
                }, {
                    field: 'State',
                    title: '状态',
                    // value: 该cell原来的值，row：该行数据 ，index：该行的序列号，从0开始
                    formatter(value, row, index) {
                        return getState(value);
                    }
                }, {
                    field: 'CreationTime',
                    title: '创建时间'
                }, {
                    field: 'Description',
                    title: '备注'
                }, {
                    field: 'Button',
                    title: '操作',
                    events: operateEvent,
                    formatter: editAndPermission,
                }]
            });
        };

        //获得查询参数
        objTabelInit.queryParams = function (params) {
            var temp = {
                //这里的键的名字和控制器的变量名必须一致
                //pagesize: params.limit, //页面大小
                //pageindex: params.offset,  //页码
                pagesize: params.pageSize,
                pageindex: params.pageNumber - 1,
                deptName: $("#txt_keyword").val(),
                state: $("#select_state option:selected").val(),
                detpSearchId: detpSearchId
            };
            return temp;
        };

        function isParentCheckBox(value, row, index) {
            if (value == "1")
                return '<a class="btn btn-small btn-primary" id="switchstate" title="是" style="@ViewBag.BtnPermissionDic["EditBtnPms"]"><i class="icon icon-edit"></i><span>是</span></a>'
            else
                return '<a class="btn btn-small btn-primary" id="switchstate" title="否" style="@ViewBag.BtnPermissionDic["EditBtnPms"]"><i class="icon icon-edit"></i><span>否</span></a>'
            //    return "<span><input id='switchstate' type='checkbox' id='questionNo_" + index + "checked='checked' '><label for='questionNo_" + index + "'></label></span>"
            //else
            //    return "<span><input id='switchstate' type='checkbox' id='questionNo_" + index + "'><label for='questionNo_" + index + "'></label></span>"

        }

        window.swithcCheckBox = {
            "click #switchstate": function (e, value, row, index) {
                var data = {
                    id: row.Id,
                }
                $pspan = $(this).children('span');
                $ses.post("/Department/EditDeptForIsParent", data, function (result) {
                    if (result.status) {
                        var spanvalue = result.flag ? '是' : '否';
                        $pspan.html(spanvalue);
                        $ses.msg(result.msg);
                        //刷新组织树
                        refreshTree();
                    } else {
                        $ses.msg(result.msg);
                    }
                });
            }
        }

        function editAndPermission(value, row, index) {
            if ((row.State == "Normal" || row.State=="1") && '@ViewBag.BtnPermissionDic["EditBtnPms"]' == '') {
                return [
                    "<button id='TableEdit' type='button' class='btn btn-default'>编辑</button>",
                    "<button id='TablePermission' type='button' class='btn btn-default'>权限</button>",
                ].join("");
            }
            return;
        }

        window.operateEvent = {
            "click #TableEdit": function (e, value, row, index) {

            },
            "click #TablePermission": function (e, value, row, index) {
                // 权限弹窗事件，弹窗之前先获取相应权限数据
                initpermissiontree(row.Id);
                openLayer(row.Id);
            }
        }

        return objTabelInit;
    }

    //var pemission = {
    //    peId: '',
    //    btn: '',
    //}

    function pemission(peId, btn) {
        this.peId = peId;
        this.btn = btn;
    }
    var plist = [];
    //button
    var ButtonInit = function () {
        var oInit = new Object();
        // model

        oInit.Init = function () {
            //搜索
            $("#btn_query").click(function () {
                $("#tb_Roles").bootstrapTable('refresh');
            });
            //显示所有
            $("#btn_all").click(function () {
                detpSearchId = '';
                $("#tb_Roles").bootstrapTable('refresh');
            });
            //保存 权限提交
            $("#btnpermission").click(function () {
                var treeObj = $.fn.zTree.getZTreeObj("treePermission");
                var nodes = treeObj.getCheckedNodes(true);
                for (var i = 0; i < nodes.length; i++) {
                    var checkBoxValue = "";
                    //if (nodes[i].isParent) continue;
                    //pemission.btn = element.myAttr;
                    var test = $("input[name='check_" + nodes[i].name + "']:checked");
                    test.each(function () {
                        checkBoxValue += $(this).val() + ",";
                    });
                    var pemissions = new pemission(nodes[i].id, checkBoxValue);
                    plist.push(pemissions);
                }
                var data = {
                    dynamic: departmentId,
                    type: "dept",
                    pemission: plist,
                }
                $ses.post('/Permission/OperateSubmit', data, function (data) {
                    $ses.msg(data.Message);
                    layer.close(index);
                    plist = [];
                });
            });
            //取消 事件
            $("#closepermission").click(function () {
                layer.close(index);
            })
        };

        return oInit;
    };

    var departmentId = '';
    var index = 0;
    //弹窗事件
    function openLayer(deptid) {
        index = layer.open({
            type: 1,
            title: '权限',
            skin: 'layui-layer-rim', //样式类名
            area: ['800px', '600px'], //宽高
            closeBtn: 0, //不显示关闭按钮
            anim: 2,
            shadeClose: true, //开启遮罩关闭
            content: $("#Permission"),
        });
        departmentId = deptid;
    };

    function getState(state) {
        if (state == "Delete" || state=="0") {
            return "已删除";
        } else if (state == "Normal" || state == "1") {
            return "正常";
        } else {
            return "已禁用";
        }
    }


    //权限树
    var setting1 = {
        check: {
            enable: true
        },
        data: {
            simpleData: {
                enable: true
            }
        },
        view: {
            addDiyDom: addDiyDom
        }
    };
    var IDMark_A = "_a";
    var zNodes1 = [];

    function setCheck() {
        var zTree = $.fn.zTree.getZTreeObj("treePermission"),
            type = { "Y": "ps", "N": "ps" };
        zTree.setting.check.chkboxType = type;
    }

    function initpermissiontree(deptId) {
        getzNodes(deptId);
        $.fn.zTree.init($("#treePermission"), setting1, zNodes1);
        setCheck();
    }

    function getzNodes(deptId) {
        $.ajax({
            async: false,
            type: 'get',
            dataType: 'json',
            url: '/Permission/PermissionTreeJson',
            data: {
                dynamic: deptId,
                type: 'dept'
            },
            success: function (result) {
                zNodes1 = result;
            },
            error: function (err) {
                $ses.msg(err.statusText);
            }
        })
    }

    //给权限树添加按钮控制
    function addDiyDom(treeId, treeNode) {
        if (treeNode.isParent) { return; }
        //获取按钮权限
        var btnpsm = treeNode.myAttr;
        var ischecked = "checked";
        var unchecked = "";
        var addstyle = unchecked, editstyle = unchecked, deletestyle = unchecked, uploadstyle = unchecked, downloadstyle = unchecked;
        if (typeof (btnpsm) != "undefined" && btnpsm != null) {
            if (btnpsm.indexOf(btnPsm.addBtn) != -1)
                addstyle = ischecked;
            if (btnpsm.indexOf(btnPsm.editBtn) != -1)
                editstyle = ischecked;
            if (btnpsm.indexOf(btnPsm.deleteBtn) != -1)
                deletestyle = ischecked;
            if (btnpsm.indexOf(btnPsm.uploadBtn) != -1)
                uploadstyle = ischecked;
            if (btnpsm.indexOf(btnPsm.downloadBtn) != -1)
                downloadstyle = ischecked;
        }
        var aObj = $("#" + treeNode.tId + IDMark_A);
        //添加图标
        //var addBtnIcon = "<label class='demoIcon'  id='addBtn_" + treeNode.id + "' title='" + treeNode.name + "' onfocus='this.blur();'><input type='checkbox' id='addBtn_" + treeNode.id + " ><i class='fa fa-plus-circle'" + addstyle + "></i></label>";
        var addBtnIcon = "&nbsp;<input type='checkbox' value='" + btnPsm.addBtn + "' name='check_" + treeNode.name + "' " + addstyle + "> 增  ";
        aObj.after(addBtnIcon);

        //var addBtn = $("#addBtn_" + treeNode);
        //if (addBtn) {
        //    addBtn.bind("click", function () {

        //    })
        //}
        //编辑图标
        //var editBtnIcon = "<span class='demoIcon' id='editBtn_" + treeNode.id + "' title='" + treeNode.name + "' onfocus='this.blur();'><i class='fa fa-edit' " + addstyle + "></i></span>";
        var editBtnIcon = "&nbsp;<input type='checkbox' value='" + btnPsm.editBtn + "' name='check_" + treeNode.name + "' " + editstyle + ">改  ";
        aObj.after(editBtnIcon);
        //var editBtn = $("#editBtn_" + treeNode);
        //if (editBtn) { editBtn.bind("click", function () { }) }
        //删除图标
        //var deleteBtnIcon = "<span class='demoIcon' id='deleteBtn_" + treeNode.id + "' title='" + treeNode.name + "' onfocus='this.blur();'><i class='fa fa-times-circle' " + addstyle + "></i></span>";
        var deleteBtnIcon = "&nbsp;<input type='checkbox' value='" + btnPsm.deleteBtn + "' name='check_" + treeNode.name + "' " + deletestyle + "> 删  ";
        aObj.after(deleteBtnIcon);
        //var deleteBtn = $("#deleteBtn_" + treeNode);
        //if (deleteBtn) { deleteBtn.bind("click", function () { }) }
        //上传图标
        //var uploadBtnIcon = "<span class='demoIcon' id='uploadBtn_" + treeNode.id + "' title='" + treeNode.name + "' onfocus='this.blur();'><i class='fa fa-upload' " + addstyle + "></i></span>";
        var uploadBtnIcon = "&nbsp;<input type='checkbox' value='" + btnPsm.uploadBtn + "' name='check_" + treeNode.name + "' " + uploadstyle + "> 上传  ";
        aObj.after(uploadBtnIcon);
        //var uploadBtn = $("#uploadBtn_" + treeNode);
        //if (uploadBtn) { uploadBtn.bind("click", function () { }) }
        //下载图标
        //var downloadBtnIcon = "<span class='demoIcon' id='downloadBtn_" + treeNode.id + "' title='" + treeNode.name + "' onfocus='this.blur();'><i class='fa fa-download' " + addstyle + "></i></span>";
        var downloadBtnIcon = "&nbsp;&nbsp;&nbsp;&nbsp;<input type='checkbox' value='" + btnPsm.downloadBtn + "' name='check_" + treeNode.name + "' " + downloadstyle + "> 下载  ";
        aObj.after(downloadBtnIcon);
        //var downloadBtn = $("#downloadBtn_" + treeNode);
        //if (downloadBtn) { downloadBtn.bind("click", function () { }) }
    }


</script>
